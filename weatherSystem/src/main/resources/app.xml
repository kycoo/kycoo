<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">

	<!-- 基于注解配置IoC容器 -->
	<context:component-scan base-package="com.kycoo" />
	<context:annotation-config />
	 
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/weather?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<!-- <property name="password" value="root" /> -->
		<property name="password" value="123456" />
		<property name="initialSize" value="10" />
		<property name="maxTotal" value="50" />
		<property name="maxIdle" value="30" />
		<property name="maxWaitMillis" value="10000" />
	</bean>

	<!-- 配置Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.kycoo.domain" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
				hibernate.show_sql=true
				hibernate.format_sql=true
				hibernate.hbm2ddl.auto=create
			</value>
		</property>
	</bean>
		
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
            class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
    	<property name="sessionFactory" ref="sessionFactory" />
    </bean>
	
	<!-- 配置声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	
	<!-- 要执行任务的任务类。 -->
    <bean id="updateWeather" class="com.kycoo.quartz.UpdateWeatherQuartz">
    </bean>

    <!-- 将需要执行的定时任务注入JOB中。 -->
    <bean id="updateWeatherJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="updateWeather"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="updateWeather"></property>
        <!-- 上一次未执行完成的，要等待有再执行。 -->
        <property name="concurrent" value="false"></property>
    </bean>
    <!-- 基本的定时器，会绑定具体的任务。 -->
    
    <bean id="updateWeatherTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="updateWeatherJob"></property>
        <!-- 
        <property name="startDelay" value="3000"></property>
        
        <property name="repeatInterval" value="2000"></property>
        -->
        <property name="cronExpression" value="0 0 0 * * ?"/>
    </bean>

    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="updateWeatherTrigger"></ref>
            </list>
        </property>
    </bean>

	
</beans>