<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">

	<!-- 基于注解配置IoC容器 -->
	<context:component-scan base-package="com.kycoo" />
	<context:annotation-config />
	 
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/weather?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<property name="initialSize" value="10" />
		<property name="maxTotal" value="50" />
		<property name="maxIdle" value="30" />
		<property name="maxWaitMillis" value="10000" />
	</bean>

	<!-- 配置Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.kycoo.domain" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
				hibernate.show_sql=true
				hibernate.format_sql=true
				hibernate.hbm2ddl.auto=update
			</value>
		</property>
	</bean>
		
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
            class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
    	<property name="sessionFactory" ref="sessionFactory" />
    </bean>
	
	<!-- 配置声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<!-- spring整合quartz -->
    <!--<bean id="simpleJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="myBean"/>-->
        <!--<property name="targetMethod" value="printMessage"/>-->
    <!--</bean>-->

    <bean id="firstComplexJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.snow.weather.quartz.FirstScheduledJob"/>
        <property name="jobDataMap">
            <!--suppress InjectionValueTypeInspection -->
            <map>
                <entry key="getDataByDay" value-ref="getDataByDay"/>
            </map>
        </property>
        <property name="Durability" value="true"/>
    </bean>

    <bean id="secondComplexJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.snow.weather.quartz.SecondScheduledJob"/>
        <property name="jobDataMap">
            <!--suppress InjectionValueTypeInspection -->
            <map>
                <entry key="getDataByHalfMonth" value-ref="getDataByHalfMonth"/>
            </map>
        </property>
        <property name="Durability" value="true"/>
    </bean>

    <!--<bean id="mySmpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">-->
        <!--<property name="jobDetail" ref="simpleJobDetail"/>-->
        <!--<property name="startDelay" value="1000"/>-->
        <!--<property name="repeatInterval" value="2000"/>-->
    <!--</bean>-->

    <bean id="myCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="firstComplexJobDetail"/>
        <property name="cronExpression" value="0/5 * * * * ?"/>
        <property name="Priority" value="5"/>
    </bean>

    <bean id="mySecondCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="secondComplexJobDetail"/>
        <!--<property name="cronExpression" value="59 59 23 L * ?"/>-->
        <property name="cronExpression" value="0/5 * * * * ?"/>
        <property name="Priority" value="2"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <!--<ref bean="simpleJobDetail"/>-->
                <ref bean="firstComplexJobDetail"/>
                <ref bean="secondComplexJobDetail"/>
            </list>
        </property>
        <property name="triggers">
            <list>
                <!--<ref bean="mySmpleTrigger"/>-->
                <ref bean="myCronTrigger"/>
                <ref bean="mySecondCronTrigger"/>
            </list>
        </property>
</beans>